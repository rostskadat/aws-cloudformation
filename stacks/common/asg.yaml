#
# FILE: asg.yaml
#
# DESCRIPTION: This nested stack creates an AutoScalingGroup and is meant to 
#   be used by other stacks. It will create an AutoScalingGroup that will check
#   the Health of the given TargetGroup and spin up and down instances 
#   accordingly.
# 
# NOTE: The given LaunchConfiguration must signal to this resource upon 
#   creation. In order to do that you can call the /root/signal_asg.sh from
#   the UserData section of your LaunchConfiguration
#
---
AWSTemplateFormatVersion: "2010-09-09"
Description: 'This nested-stack sets up an AutoScalingGroup'
Parameters: 
  ParentVpcStack: 
    Description: 'Enter the name of the VPC Stack where the AutoScalingGroup will reside'
    Type: String
    MinLength: 1
    ConstraintDescription: 'must be the name of the VPC stack'
  ParentStack:
    Description: 'Enter the name of the Parent Stack'
    Type: String
    MinLength: 1
    ConstraintDescription: 'must be the name of the Parent stack'
  TargetGroup:
    Description: 'Enter the name of the TargetGroup'
    Type: String
    MinLength: 1
    ConstraintDescription: 'must be the name of a valid TargetGroup'
  TargetGroupOther:
    Description: 'Enter the name of the TargetGroup'
    Type: String
    Default: ''    
  LaunchConfiguration:
    Description: 'Enter the name of the LaunchConfiguration'
    Type: String
    MinLength: 1
    ConstraintDescription: 'must be the name of a valid LaunchConfiguration'
Conditions:
  HasTargetGroupOther: !Not [!Equals [!Ref TargetGroupOther, '']]
Resources: 

  #----------------------------------------------------------------------------
  #
  # AWS AutoScalingGroup
  #
  AutoScalingGroup: 
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      HealthCheckGracePeriod: 300
      HealthCheckType: ELB
      LaunchConfigurationName: !Ref LaunchConfiguration
      MinSize: 1
      MaxSize: 2
      DesiredCapacity: 1
      NotificationConfigurations:
        - TopicARN: 
            'Fn::ImportValue': !Sub '${ParentVpcStack}-TopicHealth'
          NotificationTypes:
            - 'autoscaling:EC2_INSTANCE_LAUNCH'
            - 'autoscaling:EC2_INSTANCE_LAUNCH_ERROR'
            - 'autoscaling:EC2_INSTANCE_TERMINATE'
            - 'autoscaling:EC2_INSTANCE_TERMINATE_ERROR'
      TargetGroupARNs:
        - !Ref TargetGroup
        - !If [HasTargetGroupOther, !Ref TargetGroupOther, !Ref 'AWS::NoValue']
      VPCZoneIdentifier: 
        - 'Fn::ImportValue': !Sub '${ParentVpcStack}-SubnetPrivateAZA'
        - 'Fn::ImportValue': !Sub '${ParentVpcStack}-SubnetPrivateAZB'
      Tags: 
        - Key: PLATFORM
          Value: 
            'Fn::ImportValue': !Sub '${ParentVpcStack}-StackName'
          PropagateAtLaunch: true
        - Key: Name
          Value: !Sub '${ParentStack}-Main'
          PropagateAtLaunch: true
    CreationPolicy: 
      ResourceSignal: 
        Timeout: PT15M
        Count: 1
    UpdatePolicy: 
      AutoScalingRollingUpdate: 
        MinInstancesInService: 1
        MaxBatchSize: 1
        PauseTime: PT15M
        WaitOnResourceSignals: true

Outputs: 
  AutoScalingGroup: 
    Description: 'The LoadBalancer DNSName'
    Value: !Ref AutoScalingGroup
