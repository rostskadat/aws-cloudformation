#
# FILE: 04-mysql.yaml
#
# DESCRIPTION: This Stack create an RDS instance.
#
---
AWSTemplateFormatVersion: "2010-09-09"
Description: "This stack create an RDS instance to be used by other stacks"
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Parent Stack'
      Parameters:
      - ParentVpcStack
    - Label:
        default: 'DB Parameters'
      Parameters:
      - DBInstanceClass
      - MasterUsername
      - MasterUserPassword
Parameters: 
  ParentVpcStack: 
    Description: "Enter the name of the VPC Stack where the DB will reside"
    Type: String
    MinLength: 1
    ConstraintDescription: 'must be the name of the VPC stack'
  DBInstanceClass:
    Description: 'The name of the compute and memory capacity classes of the DB instance'
    Type: String
    Default: 'db.m4.large'    
  MasterUsername: 
    Description: 'The master user name for the DB instance'
    Type: String
    Default: 'root'
  MasterUserPassword: 
    Description: 'The master password for the DB instance'
    Type: String
    MinLength: 1
    NoEcho: true
Resources: 
  SecurityGroupDB:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security Group to access the DB'
      VpcId:
        'Fn::ImportValue': !Sub '${ParentVpcStack}-Vpc'
      SecurityGroupIngress:
      - SourceSecurityGroupId:
          'Fn::ImportValue': !Sub '${ParentVpcStack}-SecurityGroupPrivate'
        FromPort: 3306
        ToPort: 3306
        IpProtocol: tcp
      Tags: 
        - Key: PLATFORM
          Value: 
            'Fn::ImportValue': !Sub '${ParentVpcStack}-StackName'
        - Key: Name
          Value: !Sub '${AWS::StackName}-SecurityGroupDB'
  DBSubnetGroupDB:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties: 
      DBSubnetGroupDescription: 'The subnet where the DB reside'
      DBSubnetGroupName: !Sub '${AWS::StackName}-DBSubnetGroupDB'
      SubnetIds:
        - 'Fn::ImportValue': !Sub '${ParentVpcStack}-SubnetPrivateAZA'
        - 'Fn::ImportValue': !Sub '${ParentVpcStack}-SubnetPrivateAZB'
      Tags:
        - Key: PLATFORM
          Value: 
            'Fn::ImportValue': !Sub '${ParentVpcStack}-StackName'
        - Key: Name
          Value: !Sub '${AWS::StackName}-DBSubnetGroupDB'
  DBParameterGroupDB:
    Type: 'AWS::RDS::DBParameterGroup'
    Properties: 
      Description: 'Parameters necessary for DB'
      Family: 'mysql5.6'
      # https://docs.sonarqube.org/display/SONAR/Installing+the+Server#InstallingtheServer-installingDatabaseInstallingtheDatabase
      # https://www.jfrog.com/confluence/display/RTF/MySQL
      Parameters: { "max_allowed_packet": 8388608, "tmp_table_size": 536870912, "max_heap_table_size": 536870912, "innodb_log_file_size": 268435456, "query_cache_size" : 15728640 }
      Tags:
        - Key: PLATFORM
          Value: 
            'Fn::ImportValue': !Sub '${ParentVpcStack}-StackName'
        - Key: Name
          Value: !Sub '${AWS::StackName}-DBParameterGroupDB'
  DB: 
    Type: 'AWS::RDS::DBInstance'
    Properties:
      AllocatedStorage: 100
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: 7
      CopyTagsToSnapshot: true
      DBInstanceClass: !Ref DBInstanceClass
      DBParameterGroupName: !Ref DBParameterGroupDB
      DBSubnetGroupName: !Ref DBSubnetGroupDB
      Engine: mysql
      EngineVersion: '5.6.39'
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Ref MasterUserPassword
      PreferredBackupWindow: "01:00-03:00"
      PreferredMaintenanceWindow: "Sun:03:01-Sun:05:00"
      MultiAZ: true
      StorageEncrypted: true
      StorageType: gp2
      VPCSecurityGroups:
        - 'Fn::ImportValue': !Sub '${ParentVpcStack}-SecurityGroupPrivate'
        - !Ref SecurityGroupDB
      Tags:
        - Key: PLATFORM
          Value: 
            'Fn::ImportValue': !Sub '${ParentVpcStack}-StackName'
        - Key: Name
          Value: !Sub '${AWS::StackName}-DB'
Outputs: 
  EndpointAddress: 
    Description: 'The connection endpoint for the database'
    Value: !Sub '${DB.Endpoint.Address}'
    Export:
      Name: !Sub '${AWS::StackName}-EndpointAddress'
  EndpointPort: 
    Description: 'The port number on which the database accepts connections'
    Value: !Sub '${DB.Endpoint.Port}'
    Export:
      Name: !Sub '${AWS::StackName}-EndpointPort'
  MasterUsername: 
    Description: 'The master user name for the DB instance'
    Value: !Sub '${MasterUsername}'
    Export:
      Name: !Sub '${AWS::StackName}-MasterUsername'
      
      
      