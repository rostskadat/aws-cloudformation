#
# FILE: 02-bastion.yaml
#
# DESCRIPTION: This Stack create a Bastion Host in the DMZ of the Parent VPC stack. The Bastion Host is necessary in 
#   order to access other instances within the VPC.
#
# TODO: 
# - Should use https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html#aws-specific-parameter-types
# - Should provide alert when the platform is unhealthy
# - Fixed el cfn-init with LaunchConfiguration
#
---
AWSTemplateFormatVersion: "2010-09-09"
Description: "This test stack create "
Resources: 

  FunctionGetVariable: 
    Type: 'Custom::FunctionGetVariable'
    Version: '1.0'
    Properties: 
      ServiceToken: 
        'Fn::ImportValue': 'BUILD-FunctionGetVariable'

  Ec2Instance: 
    Type: 'AWS::EC2::Instance'
    Metadata: 
      AWS::CloudFormation::Authentication:
        S3AccessCredentials:
          type: s3
          roleName: 
            'Fn::ImportValue': 'BUILD-RoleEC2Instance'
          buckets: 
            - !Sub '${FunctionGetVariable.S3ConfigBucketName}'
      AWS::CloudFormation::Init:
        configSets: 
          default: [ Bootstrap ] 
        Bootstrap: 
          packages: 
            yum: 
              ansible: []
          files:
            # The idea is to use ansible to provision this specific instance
            '/root/playbooks/group_vars/all.yaml':
              source: !Sub 'https://${FunctionGetVariable.S3ConfigBucketName}.s3.amazonaws.com/playbooks/group_vars/all.yaml'
              mode: '000644'
              owner: root
              group: root
              context:
                Region: !Sub ${AWS::Region}
                StackName: !Sub ${AWS::StackName}
                LogGroup: !Sub ${AWS::StackName}
          commands:
            '01_sync_playbooks': 
              command: !Sub 'sudo aws s3 sync s3://${FunctionGetVariable.S3ConfigBucketName}/playbooks /root/playbooks'
            '02_set_host': 
              command: 'sudo bash -c "echo $(uname -n) ansible_connection=local > /etc/ansible/hosts"'
            '03_ansible_playbook': 
              command: 'sudo ansible-playbook --become /root/playbooks/playbook.yml'
    Properties: 
      IamInstanceProfile: 
        'Fn::ImportValue': 'BUILD-InstanceProfileEC2Instance'      
      ImageId: ami-e4515e0e
      InstanceType: 't2.micro'
      KeyName: BUILD_KEYPAIR
      SecurityGroupIds: 
        - 'Fn::ImportValue': 'BUILD-SecurityGroupDMZ'
      SubnetId:
        'Fn::ImportValue': 'BUILD-SubnetDMZ'        
      UserData: 
        'Fn::Base64': !Sub |
          #!/bin/bash
          yum-config-manager --enable epel
          yum update -y
          yum install -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init --verbose --region ${AWS::Region} --stack ${AWS::StackName} --resource Ec2Instance

Outputs: 
  DNSName: 
    Description: 'Public DNS address of the internet facing ELB'
    Value: !Sub '${Ec2Instance.PublicDnsName}'
    Export:
      Name: !Sub '${AWS::StackName}-DNSName'
    