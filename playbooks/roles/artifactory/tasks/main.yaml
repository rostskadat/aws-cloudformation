---
#
# TODO: Check first launch, not sure the master.key appears where we're looking
#
- name: Creating cleanup playbook
  include_role: name=common tasks_from=cleanup cleanup_playbook=files/root/playbooks/cleanup.yaml

- name: Removing obsolete packages
  yum: name='{{item}}' state=absent
  with_items:
    - java-1.7.0-openjdk

- name: Installing default packages
  yum: name='{{item}}'
  with_items: 
    - mysql56
    - java-1.8.0-openjdk
    - mysql-connector-java
    - MySQL-python27

- name: Adding JFrog repository
  get_url:
    url: https://bintray.com/jfrog/artifactory-rpms/rpm
    dest: /etc/yum.repos.d/jfrog.repo
    mode: 644

- name: Creating and mounting EFS
  include_role: name=common tasks_from=create_fs

- name: Monitoring application logs
  include_role: name=common tasks_from=configure_awslogs_extra
  with_items: 
    - { name: 'access', filename: '/var/opt/jfrog/artifactory/logs/access.log' }
    - { name: 'artifactory', filename: '/var/opt/jfrog/artifactory/logs/artifactory.log' }
    - { name: 'catalina', filename: '/var/opt/jfrog/artifactory/logs/catalina/catalina.out' }
    - { name: 'event', filename: '/var/opt/jfrog/artifactory/logs/event.log' }
    - { name: 'import.export', filename: '/var/opt/jfrog/artifactory/logs/import.export.log' }
    - { name: 'request', filename: '/var/opt/jfrog/artifactory/logs/request.log' }
    - { name: 'request_trace', filename: '/var/opt/jfrog/artifactory/logs/request_trace.log' }
    - { name: 'sha256_migration', filename: '/var/opt/jfrog/artifactory/logs/sha256_migration.log' }
  loop_control:
    loop_var: log

- name: Installing Artifactory     
  yum:
    name: jfrog-artifactory-oss

- name: Creating directory /mnt/application
  file:
    path: /root/artifactory
    state: directory
    mode: 0700

- name: Templating Artifactory configuration files
  template: 
    src: 'templates{{item.src}}'
    dest: '{{item.src}}'
    owner: root
    group: root
    mode: '{{item.mode}}'
  with_items:
    - { src: /etc/opt/jfrog/artifactory/db.properties, mode: '0644' }
    - { src: /root/artifactory/settings.yaml, mode: '0700' }

- name: Copying Artifactory configuration files
  copy:
    src: 'files{{item.src}}'
    dest: '{{item.src}}'
    owner: root
    group: root
    mode: '{{item.mode}}'
  with_items:
    - { src: /etc/opt/jfrog/artifactory/binarystore.xml, mode: '0644' }
    - { src: /root/playbooks/cleanup.yaml, mode: '0700' }
    - { src: /root/cleanup.sh, mode: '0700' }

- name: Creating symlink to mysql-connector-java.jar
  file:
    src: /usr/share/java/mysql-connector-java.jar
    dest: /var/opt/jfrog/artifactory/tomcat/lib/mysql-connector-java.jar
    owner: root
    group: root
    state: link

- name: Creating Artifactory DB
  mysql_db:
    name: artifactory
    state: present
    login_host: '{{DBEndpointAddress}}'
    login_port: '{{DBEndpointPort}}'
    login_user: '{{DBAdminUsername}}'
    login_password: '{{DBAdminPassword}}'

- name: Creating Artifactory DB User
  mysql_user:
    name: artifactory
    password: artifactory
    host: '%'
    state: present
    priv: 'artifactory.*:ALL'
    login_host: '{{DBEndpointAddress}}'
    login_port: '{{DBEndpointPort}}'
    login_user: '{{DBAdminUsername}}'
    login_password: '{{DBAdminPassword}}'

- name: Chown /mnt/application
  file: dest=/mnt/application owner=artifactory group=artifactory mode=u=rwX,g=rX,o=rX recurse=yes

- name: Check previous installation
  stat: path=/mnt/application/.application_configured
  register: stat_result

- name: Creating directory /etc/opt/jfrog/artifactory/security
  file: dest=/etc/opt/jfrog/artifactory/security owner=artifactory group=artifactory mode=u=rwX,g=rX,o=rX state=directory

- name: Restoring master.key
  copy: src=/mnt/application/master.key dest=/etc/opt/jfrog/artifactory/security/master.key mode=600 owner=artifactory group=artifactory
  when: stat_result.stat.exists == True 

- name: Starting Artifactory
  service: name=artifactory state=started

- name: Wait for Artifactory...
  wait_for: path=/etc/opt/jfrog/artifactory/security/master.key

- name: Backing up master.key
  copy: src=/etc/opt/jfrog/artifactory/security/master.key dest=/mnt/application/master.key mode=600 owner=artifactory group=artifactory
  when: stat_result.stat.exists == False 

- name: Changing admin password
  uri:
    url: http://localhost:8081/artifactory/api/security/users/authorization/changePassword
    method: POST
    user: admin
    password: password
    body_format: json
    body: '{ "userName":"admin", "oldPassword":"password", "newPassword1":"{{ArtifactoryAdminPassword}}", "newPassword2":"{{ArtifactoryAdminPassword}}"}'
    force_basic_auth: yes
    status_code: 200
  when: stat_result.stat.exists == False 

- name: Changing system settings
  uri:
    url: http://localhost:8081/artifactory/api/system/configuration
    method: PATCH
    user: admin
    password: '{{ArtifactoryAdminPassword}}'
    headers:
      Content-Type: 'application/yaml'
    body: "{{lookup('file', '/root/artifactory/settings.yaml')}}"
    force_basic_auth: yes
    status_code: 200
  when: stat_result.stat.exists == False 

- name: Recording installation
  file: path=/mnt/application/.application_configured state=touch mode='u=rw,g=r,o=r'  
  when: stat_result.stat.exists == False 

- name: Enabling services
  service:
    name: '{{item}}'
    state: started
    enabled: yes
  with_items:
    - artifactory

  