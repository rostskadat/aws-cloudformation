---
- name: Creating cleanup playbook
  include_role: name=common tasks_from=cleanup 
  with_items:
    - files/root/playbooks/cleanup.yaml
  loop_control:
    loop_var: cleanup_playbook

- name: Removing obsolete packages
  yum: name='{{item}}' state=absent
  with_items:
    - java-1.7.0-openjdk

- name: Installing default packages
  yum: name='{{item}}'
  with_items:
    - jq
    - mysql56
    - py-bcrypt
    - java-1.8.0-openjdk
    - java-1.8.0-openjdk-devel

- name: Instaling required Ruby Gems
  gem: name='{{item}}'
  with_items:
    - aws-sdk
    - daemons

- name: Adding Maven repository
  get_url: url=http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo dest=/etc/yum.repos.d/epel-apache-maven.repo mode=644

- name: Adding Jenkins repository
  get_url: url=http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo dest=/etc/yum.repos.d/jenkins.repo mode=644
  
- name: Import Jenkins Signing Key
  rpm_key: key=https://jenkins-ci.org/redhat/jenkins-ci.org.key state=present

- name: Fixing maven repository definition
  replace:
    path: /etc/yum.repos.d/epel-apache-maven.repo
    regexp: '\$releasever'
    replace: '7'

- name: Creating and mounting EFS 
  include_role: name=common tasks_from=create_fs

- name: Monitoring application logs
  include_role: name=common tasks_from=configure_awslogs_extra
  with_items: 
    - { name: 'jenkins', filename: '/var/log/jenkins/jenkins.log' }
  loop_control:
    loop_var: log

- name: Installing Jenkins
  yum: name="{{packages}}"
  vars: 
    packages:
      - jq
      - ant
      - git
      - docker
      - jenkins
      - apache-maven

- name: Chown on /mnt/application
  file: dest=/mnt/application owner=jenkins group=jenkins mode=u=rwX,g=rX,o=rX recurse=yes 

- name: Adding jenkins to docker group
  user:
    name: jenkins
    groups: jenkins,docker

- name: Creating Directories
  file: path='{{item.path}}' state=directory owner='{{item.owner}}' group='{{item.owner}}' mode=0755
  with_items:
    - { path: /opt/lifecycle-poller, owner: root }
    - { path: /var/lib/jenkins/.m2/, owner: jenkins }

- name: Templating Jenkins configuration files
  template: src='templates{{item.src}}' dest='{{item.src}}' owner='{{item.user}}' group='{{item.user}}' mode='{{item.mode}}'
  with_items:
    - { src: /root/configure_artifactory.groovy, mode: '0600', user: root }
    - { src: /root/configure_jdk.groovy, mode: '0600', user: root }
    - { src: /root/configure_ldap.groovy, mode: '0600', user: root }
    - { src: /root/configure_sonarqube.groovy, mode: '0600', user: root }
    - { src: /var/lib/jenkins/.m2/settings.xml, mode: '0600', user: jenkins }
    - { src: /var/lib/jenkins/jenkins.model.JenkinsLocationConfiguration.xml, mode: '0644', user: jenkins }
    - { src: /opt/lifecycle-poller/poller.conf, mode: '0400', user: root }

- name: Copying Jenkins configuration files
  copy: src='files{{item}}' dest='{{item}}' owner=jenkins group=jenkins mode='0644'
  with_items:
    - /var/lib/jenkins/hudson.tasks.Ant.xml
    - /var/lib/jenkins/hudson.tasks.Maven.xml
    - /var/lib/jenkins/hudson.plugins.git.GitTool.xml
    - /var/lib/jenkins/org.jenkinsci.plugins.docker.commons.tools.DockerTool.xml

- name: Copying Deamons files
  copy: src='files{{item}}' dest='{{item}}' owner=root group=root mode='0755'
  with_items:
    - /etc/init.d/lifecycle-poller
    - /opt/lifecycle-poller/daemon.rb
    - /opt/lifecycle-poller/worker.rb

- name: Linking Jenkins jobs directory
  file: src=/mnt/application dest=/var/lib/jenkins/jobs owner=jenkins group=jenkins state=link force=yes

- name: Fixing ownership on Jenkins paths
  file: path='{{item}}' owner=jenkins group=jenkins recurse=yes
  with_items:
    - /mnt/application
    - /var/lib/jenkins/.m2

- include_role: name=jenkins tasks_from=restart_and_wait

- name: Configuring for direct authentication
  replace: path=/var/lib/jenkins/config.xml regexp='{{item.regexp}}' replace='{{item.replace}}'
  with_items:
    - { regexp: '<slaveAgentPort>.*</slaveAgentPort>', replace: '<slaveAgentPort>49817</slaveAgentPort>' }
    - { regexp: '<label>.*</label>', replace: '<label>master</label>' }
    - { regexp: '.*<securityRealm .*', replace: '<securityRealm class="hudson.security.HudsonPrivateSecurityRealm">' }

- include_role: name=jenkins tasks_from=restart_and_wait

- block:
    - name: Validating admin credentials
      jenkins_script:
        script: 'println(Jenkins.instance.pluginManager.plugins)'
        user: admin
        password: '{{lookup("file", "/var/lib/jenkins/secrets/initialAdminPassword")}}'
      register: response
      ignore_errors: yes
    - name: Settings default credentials 
      set_fact: current_password='{{lookup("file", "/var/lib/jenkins/secrets/initialAdminPassword")}}'
      when: response.failed == false
    - name: Changing admin password
      jenkins_script:
        script: 'jenkins.model.Jenkins.instance.securityRealm.createAccount("admin", "{{JenkinsAdminPassword}}")'
        user: admin
        password: '{{current_password}}'
      when: response.failed == false
    - name: Settings final credentials 
      set_fact: current_password='{{JenkinsAdminPassword}}'

- name: Install Jenkins plugins
  jenkins_plugin: name='{{item}}' url_username=admin url_password='{{current_password}}'
  with_items:
    - ace-editor
    - ant
    - antisamy-markup-formatter
    - artifactory
    - build-pipeline-plugin
    - build-timeout
    - categorized-view
    - checkstyle
    - cloudbees-folder
    - cobertura
    - compact-columns
    - conditional-buildstep
    - config-file-provider
    - configure-job-column-plugin
    - copyartifact
    - credentials-binding
    - docker-workflow
    - downstream-buildview
    - email-ext
    - emailext-template
    - embeddable-build-status
    - envinject
    - envinject
    - extensible-choice-parameter
    - github-organization-folder
    - git-parameter
    - gradle
    - greenballs
    - groovy
    - groovy-postbuild
    - htmlpublisher
    - http_request
    - javadoc
    - jenkins-multijob-plugin
    - jira
    - job-dsl
    - jqs-monitoring
    - junit
    - ldap
    - mailer
    - matrix-auth
    - parameterized-trigger
    - pipeline-aws
    - pipeline-maven
    - pipeline-stage-view
    - publish-over-ssh
    - rebuild
    - sonar
    - ssh
    - ssh-agent
    - ssh-slaves
    - subversion
    - swarm
    - timestamper
    - token-macro
    - view-job-filters
    - warnings
    - workflow-aggregator
    - ws-cleanup

- include_role: name=jenkins tasks_from=restart_and_wait

# /root/jenkins/configure_sonarqube.sh
- name: Applying configuration
  jenkins_script:
    script: '{{item}}'
    user: admin
    password: '{{current_password}}'
  with_items:
    - '{{lookup("file", "/root/configure_artifactory.groovy")}}'
    - '{{lookup("file", "/root/configure_sonarqube.groovy")}}'
    - '{{lookup("file", "/root/configure_ldap.groovy")}}'

- name: Scheduling cloudwatch-build-active 
  cron:
    name: 'cloudwatch-build-active'
    job: "aws --region {{Region}} cloudwatch put-metric-data --namespace {{StackName}} --metric-name BuildActive --value $(curl -s -m 60 -u 'admin:{{JenkinsAdminPassword}}' 'http://localhost:8080/computer/api/json' | jq -r '.busyExecutors') --unit Count"
    user: root
    cron_file: cloudwatch-build-active

- name: Scheduling cloudwatch-build-queue
  cron:
    name: 'cloudwatch-build-queue'
    job: "aws --region {{Region}} cloudwatch put-metric-data --namespace {{StackName}} --metric-name BuildQueue --value $(curl -s -m 60 -u 'admin:{{JenkinsAdminPassword}}' 'http://localhost:8080/jqs-monitoring/api/json' | jq '.buildQueue.numberOfJobs') --unit Count"
    user: root
    cron_file: cloudwatch-build-active

- name: Enabling services
  service: name='{{item}}' state=restarted enabled=yes
  with_items:
    - docker
    - jenkins
    - lifecycle-poller
