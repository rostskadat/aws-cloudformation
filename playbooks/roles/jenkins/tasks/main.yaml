---
- name: Installing packages 
  include_tasks: install_packages.yaml

- name: Creating and mounting EFS 
  include_role: name=common tasks_from=create_fs

- name: Monitoring application logs
  include_role: name=common tasks_from=configure_awslogs_extra
  with_items: 
    - { name: 'jenkins', filename: '/var/log/jenkins/jenkins.log' }
  loop_control:
    loop_var: log

- name: Adding jenkins to docker group
  user:
    name: jenkins
    groups: jenkins,docker

- include_tasks: install_jenkins.yaml

#- include_tasks: install_deamon.yaml

- include_tasks: configure_admin_user.yaml

- include_tasks: restart_and_wait.yaml
  with_items:
    - started
  loop_control:
    loop_var: state

- name: Configuring for direct authentication
  replace: path=/var/lib/jenkins/config.xml regexp='{{item.regexp}}' replace='{{item.replace}}'
  with_items:
    - { regexp: '<slaveAgentPort>.*</slaveAgentPort>', replace: '<slaveAgentPort>49817</slaveAgentPort>' }
    - { regexp: '<label>.*</label>', replace: '<label>master</label>' }
#    - { regexp: '.*<securityRealm .*', replace: '<securityRealm class="hudson.security.HudsonPrivateSecurityRealm">' }
# - include_tasks: restart_and_wait.yaml

- block:
    - name: Validating admin credentials
      jenkins_script:
        script: 'println(Jenkins.instance.pluginManager.plugins)'
        user: admin
        password: '{{lookup("file", "/var/lib/jenkins/secrets/initialAdminPassword")}}'
      register: response
      ignore_errors: yes
    - name: Settings default credentials 
      set_fact: current_password='{{lookup("file", "/var/lib/jenkins/secrets/initialAdminPassword")}}'
      when: response.failed == false
    - name: Changing admin password
      jenkins_script:
        script: 'jenkins.model.Jenkins.instance.securityRealm.createAccount("admin", "{{JenkinsAdminPassword}}")'
        user: admin
        password: '{{current_password}}'
      when: response.failed == false
    - name: Settings final credentials 
      set_fact: current_password='{{JenkinsAdminPassword}}'

- include_tasks: install_jenkins_plugins.yaml

- include_tasks: configure_jenkins.yaml

- include_tasks: configure_jenkins_metric.yaml

- name: Enabling services
  service: name='{{item}}' state=restarted enabled=yes
  with_items:
    - docker
    - jenkins
