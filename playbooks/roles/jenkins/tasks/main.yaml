---
- name: Removing obsolete packages
  yum:
    name: '{{item}}'
    state: absent
  with_items:
    - java-1.7.0-openjdk

- name: Installing default packages
  yum:
    name: '{{item}}'
  with_items:
    - jq
    - mysql56
    - py-bcrypt
    - java-1.8.0-openjdk
    - java-1.8.0-openjdk-devel
    - amazon-efs-utils

- name: Adding Maven repository
  get_url: url=http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo dest=/etc/yum.repos.d/epel-apache-maven.repo mode=644

- name: Adding Jenkins repository
  get_url: url=http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo dest=/etc/yum.repos.d/jenkins.repo mode=644
  
- name: Import Jenkins Signing Key
  rpm_key: key=https://jenkins-ci.org/redhat/jenkins-ci.org.key state=present

- name: Fixing maven repository definition
  replace:
    path: /etc/yum.repos.d/epel-apache-maven.repo
    regexp: '\$releasever'
    replace: '7'

- name: Creating and mounting EFS 
  include_role: name=common tasks_from=create_fs

- name: Monitoring application logs
  blockinfile: 
    path: /etc/awslogs/awslogs.conf
    block: |
      [{{item}}]
      file = {{item}}
      log_stream_name = {instance_id}{{item}}
      log_group_name = {{LogGroup}}
  with_items:
    - /var/log/jenkins/jenkins.log

- name: Installing Jenkins
  yum: name="{{packages}}"
  vars: 
    packages:
      - jq
      - ant
      - git
      - jenkins
      - apache-maven

- name: Chown on /mnt/application
  file: dest=/mnt/application owner=jenkins group=jenkins mode=u=rwX,g=rX,o=rX recurse=yes 

- name: Creating M2 directory
  file: path=/var/lib/jenkins/.m2/ state=directory owner=jenkins group=jenkins mode=0755
  
- name: Templating Jenkins configuration files
  template: 
    src: 'templates{{item.src}}'
    dest: '{{item.src}}'
    owner: '{{item.user}}'
    group: '{{item.user}}'
    mode: '{{item.mode}}'
  with_items:
    - { src: /root/configure_artifactory.groovy, mode: '0600', user: root }
    - { src: /root/configure_jdk.groovy, mode: '0600', user: root }
    - { src: /root/configure_ldap.groovy, mode: '0600', user: root }
    - { src: /root/configure_sonarqube.groovy, mode: '0600', user: root }
    - { src: /var/lib/jenkins/.m2/settings.xml, mode: '0600', user: jenkins }
    - { src: /var/lib/jenkins/jenkins.model.JenkinsLocationConfiguration.xml, mode: '0644', user: jenkins }

- name: Copying Jenkins configuration files
  copy:
    src: 'files{{item}}'
    dest: '{{item}}'
    owner: jenkins
    group: jenkins
    mode: '0644'
  with_items:
    - /var/lib/jenkins/hudson.tasks.Ant.xml
    - /var/lib/jenkins/hudson.tasks.Maven.xml
    - /var/lib/jenkins/hudson.plugins.git.GitTool.xml

- name: Linking Jenkins jobs directory
  file:
    src: /mnt/application
    dest: /var/lib/jenkins/jobs
    owner: jenkins
    group: jenkins
    state: link
    force: yes

- name: Fixing ownership on Jenkins paths
  file:
    path: '{{item}}'
    owner: jenkins
    group: jenkins
    recurse: yes
  with_items:
    - /mnt/application
    - /var/lib/jenkins/.m2

- name: Starting Jenkins
  service: name=jenkins state=started

- name: Wait for Jenkins to startup 
  wait_for:
    path: /var/lib/jenkins/config.xml

- name: Fixing config.xml
  replace:
    path: /var/lib/jenkins/config.xml
    regexp: '{{item.regexp}}'
    replace: '{{item.replace}}'
  with_items:
    - { regexp: '<slaveAgentPort>.*</slaveAgentPort>', replace: '<slaveAgentPort>49817</slaveAgentPort>' }
    - { regexp: '<label>.*</label>', replace: '<label>master</label>' }

- block:
    - name: Validating admin credentials
      jenkins_script:
        script: 'jenkins.model.Jenkins.instance.securityRealm.createAccount("admin", "{{JenkinsAdminPassword}}")'
        user: admin
        password: '{{lookup("file", "/var/lib/jenkins/secrets/initialAdminPassword")}}'
      register: response
      ignore_errors: yes
    - name: Settings default credentials 
      set_fact: current_password='{{lookup("file", "/var/lib/jenkins/secrets/initialAdminPassword")}}'
      when: response.failed == false
    - name: Settings final credentials 
      set_fact: current_password='{{JenkinsAdminPassword}}'
      when: response.failed == true

- name: Install Jenkins plugins
  jenkins_plugin:
    name: '{{item}}'
    url_username: admin
    url_password: '{{current_password}}'
  with_items:
    - ace-editor
    - ant
    - antisamy-markup-formatter
    - artifactory
    - build-pipeline-plugin
    - build-timeout
    - checkstyle
    - categorized-view 
    - cloudbees-folder
    - cobertura
    - compact-columns 
    - conditional-buildstep
    - config-file-provider
    - configure-job-column-plugin 
    - copyartifact
    - downstream-buildview 
    - email-ext
    - emailext-template
    - embeddable-build-status
    - envinject 
    - extensible-choice-parameter 
    - git-parameter
    - gradle
    - greenballs 
    - groovy 
    - groovy-postbuild 
    - htmlpublisher
    - javadoc 
    - jira 
    - job-dsl 
    - jenkins-multijob-plugin
    - junit
    - ldap
    - mailer
    - matrix-auth
    - parameterized-trigger
    - pipeline-stage-view
    - publish-over-ssh
    - rebuild
    - sonar
    - ssh
    - ssh-agent
    - ssh-slaves
    - swarm 
    - timestamper
    - token-macro 
    - view-job-filters 
    - warnings
    - workflow-aggregator
    - ws-cleanup

- name: Starting Jenkins
  service: name=jenkins state=restarted

- name: Wait for Jenkins to startup 
  uri:
    url: "http://localhost:8080/login"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 1

# /root/jenkins/configure_sonarqube.sh
- name: Applying configuration
  jenkins_script:
    script: '{{item}}'
    user: admin
    password: '{{current_password}}'
  with_items:
    - '{{lookup("file", "/root/configure_artifactory.groovy")}}'
    - '{{lookup("file", "/root/configure_sonarqube.groovy")}}'
    - '{{lookup("file", "/root/configure_ldap.groovy")}}'

- name: Enabling services
  service: name='{{item}}' state=restarted enabled=yes
  with_items:
    - jenkins
