---
- name: Creating cleanup playbook
  include_role: name=common tasks_from=cleanup 
  with_items:
    - files/root/playbooks/cleanup.yaml
  loop_control:
    loop_var: cleanup_playbook

- name: Removing obsolete packages
  yum:
    name: '{{item}}'
    state: absent
  with_items:
    - java-1.7.0-openjdk

- name: Installing default packages
  yum:
    name: '{{item}}'
  with_items: 
    - jq
    - postfix
    - policycoreutils-python
    - postgresql96-contrib
    - patch
    
- name: Install pip modules
  pip: name='{{item}}'
  with_items:
    - psycopg2-binary
    - pyapi-gitlab

- name: Downloading Gitlab repositories
  get_url:
    url: '{{item.url}}'
    dest: '{{item.dest}}'
    mode: 700
  with_items:
    - { url: 'https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.rpm.sh', dest: '/root/gitlab-ee.repo.sh' } 
    - { url: 'https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh', dest: '/root/gitlab-runner.repo.sh' } 

- name: Adding Gitlab repositories
  shell: '{{item.shell}}'
  args:
    creates: '{{item.creates}}'
  with_items:
    - { shell: '/root/gitlab-ee.repo.sh', creates: '/etc/yum.repos.d/gitlab_gitlab-ee.repo' } 
    - { shell: '/root/gitlab-runner.repo.sh', creates: '/etc/yum.repos.d/runner_gitlab-runner.repo' } 

- name: Creating and mounting EFS
  include_role: name=common tasks_from=create_fs

- name: Monitoring application logs
  include_role: name=common tasks_from=configure_awslogs_extra
  with_items: 
    - { name: 'unicorn_stdout', filename: '/var/log/gitlab/unicorn/unicorn_stdout.log' }
    - { name: 'unicorn_stderr', filename: '/var/log/gitlab/unicorn/unicorn_stderr.log' }
    - { name: 'gitlab-shell', filename: '/var/log/gitlab/gitlab-shell/gitlab-shell.log' }
    - { name: 'nginx-gitlab_error', filename: '/var/log/gitlab/nginx/gitlab_error.log' }
    - { name: 'nginx-gitlab_access', filename: '/var/log/gitlab/nginx/gitlab_access.log' }
    - { name: 'gitlab-rails-application', filename: '/var/log/gitlab/gitlab-rails/application.log' }
  loop_control:
    loop_var: log

- name: Installing Gitlab Packages
  yum:
    name: '{{items}}'
  with_items: 
    - gitlab-ee
    - gitlab-runner

- name: Templating /etc/gitlab/gitlab.rb
  template: 
    src: 'templates{{item.src}}'
    dest: '{{item.src}}'
    owner: root
    group: root
    mode: '{{item.mode}}'
  with_items:
    - { src: /etc/gitlab/gitlab.rb, mode: '0700' }

- name: Patching gitlab-hook
  include_role: name=common tasks_from=patching_file
  with_items: 
    - { src: '/root/config.rb.patch', dest: '/opt/gitlab/embedded/service/gitlab-rails/ee/lib/ee/gitlab/auth/ldap/config.rb', owner: 'root', group: 'root', mode: '0644' }
  loop_control:
    loop_var: patch

- name: Configuring Gitlab
  shell: 'GITLAB_ROOT_EMAIL="{{GitlabAdminEmail}}" GITLAB_ROOT_PASSWORD="{{GitlabAdminPassword}}" gitlab-ctl reconfigure'

- name: Obtaining token
  uri:
    url: http://localhost/oauth/token
    validate_certs: no
    method: POST
    body_format: json
    body:
      grant_type: password
      username: root
      password: '{{GitlabAdminPassword}}'
    status_code: 200
  register: response

- set_fact:
    token: "{{ response.json.access_token }}"

- name: Changing settings
  uri:
    url: 'http://localhost/api/v4/application/settings?{{item.key}}={{item.value}}'
    validate_certs: no
    method: PUT
    headers:
      Authorization: 'Bearer {{token}}'
    status_code: 200
  with_items:
    - { key: 'signup_enabled', value: false }
    - { key: 'default_project_visibility', value: 'public' }
    - { key: 'email_author_in_body', value: true }
    - { key: 'gravatar_enabled', value: false }
    - { key: 'help_page_hide_commercial_content', value: true }
    - { key: 'html_emails_enabled', value: true }

- name: Creating Developers group
  uri:
    url: 'http://localhost/api/v4/groups'
    validate_certs: no
    method: POST
    headers:
      Authorization: 'Bearer {{token}}'
    body_format: json
    body:
      name: 'Developers'
      path: 'Developers'
      description: 'Developers Group'
    status_code: 201,400

- name: Revoking token
  uri:
    url: 'http://localhost/oauth/revoke'
    validate_certs: no
    method: POST
    headers:
      Authorization: 'Bearer {{token}}'
    body_format: json
    body:
      token: '{{token}}'
    status_code: 200

- name: restarting gitlab  
  shell: 'gitlab-ctl restart'
  
